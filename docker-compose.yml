# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker compose reference guide at
# https://docs.docker.com/compose/compose-file/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose



services:

  rabbit:
    image: rabbitmq:3-management
    env_file:
      envs/.rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"

  flask:
    build: .
    # command: gunicorn --bind 0.0.0.0:5000 app:app # sync deployment
    # command: gunicorn -k gevent --bind 0.0.0.0:5000 app:app # async deployment
    command: python manage.py run -h 0.0.0.0
    volumes:
      - .:/usr/src/app/
    ports:
      - '5001:5000'
    env_file:
      envs/.flask
    depends_on:
      rabbit:
        condition: service_started
      postgres:
        condition: service_started


  postgres:
    image: postgres:16
    restart: unless-stopped
    env_file:
      envs/.postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - '5432:5432'
      - '6543:5432'


volumes:
  postgres_data:
